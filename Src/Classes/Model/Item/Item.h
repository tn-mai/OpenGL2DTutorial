#pragma once

#include "cocos2d.h"
#include "Data/Status/Status.h"
#include "Model/Character/Character.h"

//=========================================================================
//	アイテムに関するタイプなどの列挙はここから書いていく
//=========================================================================

enum class ITEM_TYPE {

	// HP回復
	PORTION,

	//速度アップ
	BOOST,
};

//=========================================================================
//	アイテムのクラスはここから書く
//=========================================================================

class CItem : public cocos2d::Sprite {
public:

	//=========================================================================
	//	ここからは理解出来るまでは変更禁止
	//=========================================================================

	// コンストラクタの宣言
	CItem();
	// デストラクタの宣言
	~CItem();

	CREATE_FUNC(CItem);

	/**
	*	@desc	初期化処理
	*/
	virtual bool init() override;

	//=========================================================================
	//	ここまでは理解出来るまでは変更禁止
	//=========================================================================

public:

	//=========================================================================
	//	メンバ宣言
	//		メイン内で使用するメンバはここ以降に記述していく
	//=========================================================================

	// 移動用データ
	CMove m_move;

	// チップデータ
	CChip m_chip;

	// アニメーションデータ
	CAnimation m_anime;

	// 衝突判定用データ
	CBody m_body;

	// ステータス
	CStatus m_status;

	// アイテムのタイプ
	ITEM_TYPE m_itemType;

	// 有効フラグ
	bool m_activeFlag;

	// エフェクトの最大数
	static const int MAX_ITEM = 100;

	// 移動に関するメンバ関数宣言
	void moveFunc();

	// アニメーションに関するメンバ関数宣言
	void animationFunc();

	// 画面端判定に関するメンバ関数宣言
	void endOfScreen();

	// 値の反映に関するメンバ関数宣言
	void applyFunc();

	/**
	 *	@desc	アイテムの効果を適用させる
	 *	@param	衝突してきたキャラクターのステータスのアドレス
	 */
	void hits(CStatus* pStatus);
};
